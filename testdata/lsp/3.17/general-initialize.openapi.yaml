# $ref: '#/components/schemas/_InitializeParams'
# $schema: http://json-schema.org/draft-07/schema#
components:
  schemas:
    InitializeParams:
      defaultProperties: []
      description: The initialize parameters
      properties:
        capabilities:
          $ref: '#/components/schemas/ClientCapabilities'
          description: The capabilities provided by the client (editor or tool)
          title: capabilities
        clientInfo:
          title: clientInfo
          typeof: function
        initializationOptions:
          $ref: '#/components/schemas/LSPAny'
          description: User provided initialization options.
          title: initializationOptions
        locale:
          description: |-
            The locale the client is currently showing the user interface
            in. This must not necessarily be the locale of the operating
            system.

            Uses IETF language tags as the value's syntax
            (See https://en.wikipedia.org/wiki/IETF_language_tag)
          title: locale
          type: string
        processId:
          description: |-
            The process Id of the parent process that started
            the server.
          title: processId
          type: integer
        rootPath:
          description: |-
            The rootPath of the workspace. Is null
            if no folder is open.
          title: rootPath
          type: string
        rootUri:
          description: |-
            The rootUri of the workspace. Is null if no
            folder is open. If both `rootPath` and `rootUri` are set
            `rootUri` wins.
          title: rootUri
          type: string
        trace:
          description: The initial trace setting. If omitted trace is disabled ('off').
          enum:
          - off
          - compact
          - messages
          - verbose
          title: trace
          type: string
        workDoneToken:
          $ref: '#/components/schemas/ProgressToken'
          description: An optional token that a server can use to report work done progress.
          title: workDoneToken
      x-propertyOrder:
      - processId
      - clientInfo
      - locale
      - rootPath
      - rootUri
      - capabilities
      - initializationOptions
      - trace
      - workDoneToken
      required:
      - capabilities
      - processId
      - rootUri
      title: InitializeParams
      type: object
    CallHierarchyClientCapabilities:
      defaultProperties: []
      properties:
        dynamicRegistration:
          description: |-
            Whether implementation supports dynamic registration. If this is set to `true`
            the client supports the new `(TextDocumentRegistrationOptions & StaticRegistrationOptions)`
            return value for the corresponding server capability as well.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: CallHierarchyClientCapabilities
      type: object
    ClientCapabilities:
      defaultProperties: []
      description: Defines the capabilities provided by the client.
      properties:
        experimental:
          additionalProperties: true
          description: Experimental client capabilities.
          properties: {}
          title: experimental
          type: object
        general:
          $ref: '#/components/schemas/GeneralClientCapabilities'
          description: General client capabilities.
          title: general
        notebookDocument:
          $ref: '#/components/schemas/NotebookDocumentClientCapabilities'
          description: Capabilities specific to the notebook document support.
          title: notebookDocument
        textDocument:
          $ref: '#/components/schemas/TextDocumentClientCapabilities'
          description: Text document specific client capabilities.
          title: textDocument
        window:
          $ref: '#/components/schemas/WindowClientCapabilities'
          description: Window specific client capabilities.
          title: window
        workspace:
          $ref: '#/components/schemas/WorkspaceClientCapabilities'
          description: Workspace specific client capabilities.
          title: workspace
      x-propertyOrder:
      - workspace
      - textDocument
      - notebookDocument
      - window
      - general
      - experimental
      title: ClientCapabilities
      type: object
    CodeActionClientCapabilities:
      defaultProperties: []
      description: The Client Capabilities of a [CodeActionRequest](#CodeActionRequest).
      properties:
        codeActionLiteralSupport:
          title: codeActionLiteralSupport
          typeof: function
        dataSupport:
          description: |-
            Whether code action supports the `data` property which is
            preserved between a `textDocument/codeAction` and a
            `codeAction/resolve` request.
          title: dataSupport
          type: boolean
        disabledSupport:
          description: Whether code action supports the `disabled` property.
          title: disabledSupport
          type: boolean
        dynamicRegistration:
          description: Whether code action supports dynamic registration.
          title: dynamicRegistration
          type: boolean
        honorsChangeAnnotations:
          description: |-
            Whether th client honors the change annotations in
            text edits and resource operations returned via the
            `CodeAction#edit` property by for example presenting
            the workspace edit in the user interface and asking
            for confirmation.
          title: honorsChangeAnnotations
          type: boolean
        isPreferredSupport:
          description: Whether code action supports the `isPreferred` property.
          title: isPreferredSupport
          type: boolean
        resolveSupport:
          title: resolveSupport
          typeof: function
      x-propertyOrder:
      - dynamicRegistration
      - codeActionLiteralSupport
      - isPreferredSupport
      - disabledSupport
      - dataSupport
      - resolveSupport
      - honorsChangeAnnotations
      title: CodeActionClientCapabilities
      type: object
    CodeLensClientCapabilities:
      defaultProperties: []
      description: The client capabilities  of a [CodeLensRequest](#CodeLensRequest).
      properties:
        dynamicRegistration:
          description: Whether code lens supports dynamic registration.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: CodeLensClientCapabilities
      type: object
    CodeLensWorkspaceClientCapabilities:
      defaultProperties: []
      properties:
        refreshSupport:
          description: |-
            Whether the client implementation supports a refresh request sent from the
            server to the client.

            Note that this event is global and will force the client to refresh all
            code lenses currently shown. It should be used with absolute care and is
            useful for situation where a server for example detect a project wide
            change that requires such a calculation.
          title: refreshSupport
          type: boolean
      x-propertyOrder:
      - refreshSupport
      title: CodeLensWorkspaceClientCapabilities
      type: object
    CompletionClientCapabilities:
      defaultProperties: []
      description: Completion client capabilities
      properties:
        completionItem:
          title: completionItem
          typeof: function
        completionItemKind:
          title: completionItemKind
          typeof: function
        completionList:
          title: completionList
          typeof: function
        contextSupport:
          description: |-
            The client supports to send additional context information for a
            `textDocument/completion` request.
          title: contextSupport
          type: boolean
        dynamicRegistration:
          description: Whether completion supports dynamic registration.
          title: dynamicRegistration
          type: boolean
        insertTextMode:
          $ref: '#/components/schemas/InsertTextMode'
          description: |-
            Defines how the client handles whitespace and indentation
            when accepting a completion item that uses multi line
            text in either `insertText` or `textEdit`.
          title: insertTextMode
      x-propertyOrder:
      - dynamicRegistration
      - completionItem
      - completionItemKind
      - insertTextMode
      - contextSupport
      - completionList
      title: CompletionClientCapabilities
      type: object
    DeclarationClientCapabilities:
      defaultProperties: []
      properties:
        dynamicRegistration:
          description: |-
            Whether declaration supports dynamic registration. If this is set to `true`
            the client supports the new `DeclarationRegistrationOptions` return value
            for the corresponding server capability as well.
          title: dynamicRegistration
          type: boolean
        linkSupport:
          description: The client supports additional metadata in the form of declaration
            links.
          title: linkSupport
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      - linkSupport
      title: DeclarationClientCapabilities
      type: object
    DefinitionClientCapabilities:
      defaultProperties: []
      description: Client Capabilities for a [DefinitionRequest](#DefinitionRequest).
      properties:
        dynamicRegistration:
          description: Whether definition supports dynamic registration.
          title: dynamicRegistration
          type: boolean
        linkSupport:
          description: The client supports additional metadata in the form of definition
            links.
          title: linkSupport
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      - linkSupport
      title: DefinitionClientCapabilities
      type: object
    DidChangeConfigurationClientCapabilities:
      defaultProperties: []
      properties:
        dynamicRegistration:
          description: Did change configuration notification supports dynamic registration.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: DidChangeConfigurationClientCapabilities
      type: object
    DidChangeWatchedFilesClientCapabilities:
      defaultProperties: []
      properties:
        dynamicRegistration:
          description: |-
            Did change watched files notification supports dynamic registration. Please note
            that the current protocol doesn't support static configuration for file changes
            from the server side.
          title: dynamicRegistration
          type: boolean
        relativePatternSupport:
          description: |-
            Whether the client has support for {@link RelativePatternrelative pattern}
            or not.
          title: relativePatternSupport
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      - relativePatternSupport
      title: DidChangeWatchedFilesClientCapabilities
      type: object
    DocumentColorClientCapabilities:
      defaultProperties: []
      properties:
        dynamicRegistration:
          description: |-
            Whether implementation supports dynamic registration. If this is set to `true`
            the client supports the new `DocumentColorRegistrationOptions` return value
            for the corresponding server capability as well.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: DocumentColorClientCapabilities
      type: object
    DocumentFormattingClientCapabilities:
      defaultProperties: []
      description: Client capabilities of a [DocumentFormattingRequest](#DocumentFormattingRequest).
      properties:
        dynamicRegistration:
          description: Whether formatting supports dynamic registration.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: DocumentFormattingClientCapabilities
      type: object
    DocumentHighlightClientCapabilities:
      defaultProperties: []
      description: Client Capabilities for a [DocumentHighlightRequest](#DocumentHighlightRequest).
      properties:
        dynamicRegistration:
          description: Whether document highlight supports dynamic registration.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: DocumentHighlightClientCapabilities
      type: object
    DocumentLinkClientCapabilities:
      defaultProperties: []
      description: The client capabilities of a [DocumentLinkRequest](#DocumentLinkRequest).
      properties:
        dynamicRegistration:
          description: Whether document link supports dynamic registration.
          title: dynamicRegistration
          type: boolean
        tooltipSupport:
          description: Whether the client support the `tooltip` property on `DocumentLink`.
          title: tooltipSupport
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      - tooltipSupport
      title: DocumentLinkClientCapabilities
      type: object
    DocumentOnTypeFormattingClientCapabilities:
      defaultProperties: []
      description: Client capabilities of a [DocumentOnTypeFormattingRequest](#DocumentOnTypeFormattingRequest).
      properties:
        dynamicRegistration:
          description: Whether on type formatting supports dynamic registration.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: DocumentOnTypeFormattingClientCapabilities
      type: object
    DocumentRangeFormattingClientCapabilities:
      defaultProperties: []
      description: Client capabilities of a [DocumentRangeFormattingRequest](#DocumentRangeFormattingRequest).
      properties:
        dynamicRegistration:
          description: Whether range formatting supports dynamic registration.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: DocumentRangeFormattingClientCapabilities
      type: object
    DocumentSymbolClientCapabilities:
      defaultProperties: []
      description: Client Capabilities for a [DocumentSymbolRequest](#DocumentSymbolRequest).
      properties:
        dynamicRegistration:
          description: Whether document symbol supports dynamic registration.
          title: dynamicRegistration
          type: boolean
        hierarchicalDocumentSymbolSupport:
          description: The client support hierarchical document symbols.
          title: hierarchicalDocumentSymbolSupport
          type: boolean
        labelSupport:
          description: |-
            The client supports an additional label presented in the UI when
            registering a document symbol provider.
          title: labelSupport
          type: boolean
        symbolKind:
          title: symbolKind
          typeof: function
        tagSupport:
          title: tagSupport
          typeof: function
      x-propertyOrder:
      - dynamicRegistration
      - symbolKind
      - hierarchicalDocumentSymbolSupport
      - tagSupport
      - labelSupport
      title: DocumentSymbolClientCapabilities
      type: object
    ExecuteCommandClientCapabilities:
      defaultProperties: []
      description: The client capabilities of a [ExecuteCommandRequest](#ExecuteCommandRequest).
      properties:
        dynamicRegistration:
          description: Execute command supports dynamic registration.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: ExecuteCommandClientCapabilities
      type: object
    FailureHandlingKind:
      enum:
      - abort
      - textOnlyTransactional
      - transactional
      - undo
      title: FailureHandlingKind
      type: string
    FileOperationClientCapabilities:
      defaultProperties: []
      description: |-
        Capabilities relating to events from file operations by the user in the client.

        These events do not come from the file system, they come from user operations
        like renaming a file in the UI.
      properties:
        didCreate:
          description: The client has support for sending didCreateFiles notifications.
          title: didCreate
          type: boolean
        didDelete:
          description: The client has support for sending didDeleteFiles notifications.
          title: didDelete
          type: boolean
        didRename:
          description: The client has support for sending didRenameFiles notifications.
          title: didRename
          type: boolean
        dynamicRegistration:
          description: Whether the client supports dynamic registration for file requests/notifications.
          title: dynamicRegistration
          type: boolean
        willCreate:
          description: The client has support for willCreateFiles requests.
          title: willCreate
          type: boolean
        willDelete:
          description: The client has support for willDeleteFiles requests.
          title: willDelete
          type: boolean
        willRename:
          description: The client has support for willRenameFiles requests.
          title: willRename
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      - didCreate
      - willCreate
      - didRename
      - willRename
      - didDelete
      - willDelete
      title: FileOperationClientCapabilities
      type: object
    FoldingRangeClientCapabilities:
      defaultProperties: []
      properties:
        dynamicRegistration:
          description: |-
            Whether implementation supports dynamic registration for folding range
            providers. If this is set to `true` the client supports the new
            `FoldingRangeRegistrationOptions` return value for the corresponding
            server capability as well.
          title: dynamicRegistration
          type: boolean
        foldingRange:
          title: foldingRange
          typeof: function
        foldingRangeKind:
          title: foldingRangeKind
          typeof: function
        lineFoldingOnly:
          description: |-
            If set, the client signals that it only supports folding complete lines.
            If set, client will ignore specified `startCharacter` and `endCharacter`
            properties in a FoldingRange.
          title: lineFoldingOnly
          type: boolean
        rangeLimit:
          $ref: '#/components/schemas/uinteger'
          description: |-
            The maximum number of folding ranges that the client prefers to receive
            per document. The value serves as a hint, servers are free to follow the
            limit.
          title: rangeLimit
      x-propertyOrder:
      - dynamicRegistration
      - rangeLimit
      - lineFoldingOnly
      - foldingRangeKind
      - foldingRange
      title: FoldingRangeClientCapabilities
      type: object
    GeneralClientCapabilities:
      defaultProperties: []
      description: General client capabilities.
      properties:
        markdown:
          $ref: '#/components/schemas/MarkdownClientCapabilities'
          description: Client capabilities specific to the client's markdown parser.
          title: markdown
        positionEncodings:
          description: |-
            The position encodings supported by the client. Client and server
            have to agree on the same position encoding to ensure that offsets
            (e.g. character position in a line) are interpreted the same on both
            side.

            To keep the protocol backwards compatible the following applies: if
            the value 'utf-16' is missing from the array of position encodings
            servers can assume that the client supports UTF-16. UTF-16 is
            therefore a mandatory encoding.

            If omitted it defaults to ['utf-16'].

            Implementation considerations: since the conversion from one encoding
            into another requires the content of the file / line the conversion
            is best done where the file is read which is usually on the server
            side.
          items:
            type: string
          title: positionEncodings
          type: array
        regularExpressions:
          $ref: '#/components/schemas/RegularExpressionsClientCapabilities'
          description: Client capabilities specific to regular expressions.
          title: regularExpressions
        staleRequestSupport:
          title: staleRequestSupport
          typeof: function
      x-propertyOrder:
      - staleRequestSupport
      - regularExpressions
      - markdown
      - positionEncodings
      title: GeneralClientCapabilities
      type: object
    HoverClientCapabilities:
      defaultProperties: []
      properties:
        contentFormat:
          description: |-
            Client supports the follow content formats for the content
            property. The order describes the preferred format of the client.
          items:
            description: |-
              Describes the content type that a client supports in various
              result literals like `Hover`, `ParameterInfo` or `CompletionItem`.

              Please note that `MarkupKinds` must not start with a `$`. This kinds
              are reserved for internal usage.
            enum:
            - markdown
            - plaintext
            type: string
          title: contentFormat
          type: array
        dynamicRegistration:
          description: Whether hover supports dynamic registration.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      - contentFormat
      title: HoverClientCapabilities
      type: object
    ImplementationClientCapabilities:
      defaultProperties: []
      properties:
        dynamicRegistration:
          description: |-
            Whether implementation supports dynamic registration. If this is set to `true`
            the client supports the new `ImplementationRegistrationOptions` return value
            for the corresponding server capability as well.
          title: dynamicRegistration
          type: boolean
        linkSupport:
          description: The client supports additional metadata in the form of definition
            links.
          title: linkSupport
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      - linkSupport
      title: ImplementationClientCapabilities
      type: object
    InsertTextMode:
      description: |-
        How whitespace and indentation is handled during completion
        item insertion.
      enum:
      - 1
      - 2
      title: InsertTextMode
      type: number
    LSPAny:
      description: |-
        The LSP any type.

        In the current implementation we map LSPAny to any. This is due to the fact
        that the TypeScript compilers can't infer string access signatures for
        interface correctly (it can though for types). See the following issue for
        details: https://github.com/microsoft/TypeScript/issues/15300.

        When the issue is addressed LSPAny can be defined as follows:

        ```ts
        export type LSPAny = LSPObject | LSPArray | string | integer | uinteger | decimal | boolean | null | undefined;
        export type LSPObject = { [key: string]: LSPAny };
        export type LSPArray = LSPAny[];
        ```

        Please note that strictly speaking a property with the value `undefined`
        can't be converted into JSON preserving the property name. However for
        convenience it is allowed and assumed that all these properties are
        optional as well.
      title: LSPAny
    LinkedEditingRangeClientCapabilities:
      defaultProperties: []
      description: Client capabilities for the linked editing range request.
      properties:
        dynamicRegistration:
          description: |-
            Whether implementation supports dynamic registration. If this is set to `true`
            the client supports the new `(TextDocumentRegistrationOptions & StaticRegistrationOptions)`
            return value for the corresponding server capability as well.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: LinkedEditingRangeClientCapabilities
      type: object
    MarkdownClientCapabilities:
      defaultProperties: []
      description: Client capabilities specific to the used markdown parser.
      properties:
        allowedTags:
          description: |-
            A list of HTML tags that the client allows / supports in
            Markdown.
          items:
            type: string
          title: allowedTags
          type: array
        parser:
          description: The name of the parser.
          title: parser
          type: string
        version:
          description: The version of the parser.
          title: version
          type: string
      x-propertyOrder:
      - parser
      - version
      - allowedTags
      required:
      - parser
      title: MarkdownClientCapabilities
      type: object
    MonikerClientCapabilities:
      defaultProperties: []
      description: Client capabilities specific to the moniker request.
      properties:
        dynamicRegistration:
          description: |-
            Whether moniker supports dynamic registration. If this is set to `true`
            the client supports the new `MonikerRegistrationOptions` return value
            for the corresponding server capability as well.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: MonikerClientCapabilities
      type: object
    NotebookDocumentClientCapabilities:
      defaultProperties: []
      description: Capabilities specific to the notebook document support.
      properties:
        synchronization:
          title: synchronization
          typeof: function
      x-propertyOrder:
      - synchronization
      required:
      - synchronization
      title: NotebookDocumentClientCapabilities
      type: object
    PrepareSupportDefaultBehavior:
      enum:
      - 1
      title: PrepareSupportDefaultBehavior
      type: number
    ProgressToken:
      title: ProgressToken
      type: LSPAny
      # type:
      # - string
      # - integer
    PublishDiagnosticsClientCapabilities:
      defaultProperties: []
      description: The publish diagnostic client capabilities.
      properties:
        codeDescriptionSupport:
          description: Client supports a codeDescription property
          title: codeDescriptionSupport
          type: boolean
        dataSupport:
          description: |-
            Whether code action supports the `data` property which is
            preserved between a `textDocument/publishDiagnostics` and
            `textDocument/codeAction` request.
          title: dataSupport
          type: boolean
        relatedInformation:
          description: Whether the clients accepts diagnostics with related information.
          title: relatedInformation
          type: boolean
        tagSupport:
          title: tagSupport
          typeof: function
        versionSupport:
          description: |-
            Whether the client interprets the version property of the
            `textDocument/publishDiagnostics` notification`s parameter.
          title: versionSupport
          type: boolean
      x-propertyOrder:
      - relatedInformation
      - tagSupport
      - versionSupport
      - codeDescriptionSupport
      - dataSupport
      title: PublishDiagnosticsClientCapabilities
      type: object
    ReferenceClientCapabilities:
      defaultProperties: []
      description: Client Capabilities for a [ReferencesRequest](#ReferencesRequest).
      properties:
        dynamicRegistration:
          description: Whether references supports dynamic registration.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: ReferenceClientCapabilities
      type: object
    RegularExpressionsClientCapabilities:
      defaultProperties: []
      description: Client capabilities specific to regular expressions.
      properties:
        engine:
          description: The engine's name.
          title: engine
          type: string
        version:
          description: The engine's version.
          title: version
          type: string
      x-propertyOrder:
      - engine
      - version
      required:
      - engine
      title: RegularExpressionsClientCapabilities
      type: object
    RenameClientCapabilities:
      defaultProperties: []
      properties:
        dynamicRegistration:
          description: Whether rename supports dynamic registration.
          title: dynamicRegistration
          type: boolean
        honorsChangeAnnotations:
          description: |-
            Whether th client honors the change annotations in
            text edits and resource operations returned via the
            rename request's workspace edit by for example presenting
            the workspace edit in the user interface and asking
            for confirmation.
          title: honorsChangeAnnotations
          type: boolean
        prepareSupport:
          description: |-
            Client supports testing for validity of rename operations
            before execution.
          title: prepareSupport
          type: boolean
        prepareSupportDefaultBehavior:
          $ref: '#/components/schemas/PrepareSupportDefaultBehavior'
          description: |-
            Client supports the default behavior result.

            The value indicates the default behavior used by the
            client.
          title: prepareSupportDefaultBehavior
      x-propertyOrder:
      - dynamicRegistration
      - prepareSupport
      - prepareSupportDefaultBehavior
      - honorsChangeAnnotations
      title: RenameClientCapabilities
      type: object
    SelectionRangeClientCapabilities:
      defaultProperties: []
      properties:
        dynamicRegistration:
          description: |-
            Whether implementation supports dynamic registration for selection range providers. If this is set to `true`
            the client supports the new `SelectionRangeRegistrationOptions` return value for the corresponding server
            capability as well.
          title: dynamicRegistration
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      title: SelectionRangeClientCapabilities
      type: object
    SemanticTokensClientCapabilities:
      defaultProperties: []
      properties:
        augmentsSyntaxTokens:
          description: |-
            Whether the client uses semantic tokens to augment existing
            syntax tokens. If set to `true` client side created syntax
            tokens and semantic tokens are both used for colorization. If
            set to `false` the client only uses the returned semantic tokens
            for colorization.

            If the value is `undefined` then the client behavior is not
            specified.
          title: augmentsSyntaxTokens
          type: boolean
        dynamicRegistration:
          description: |-
            Whether implementation supports dynamic registration. If this is set to `true`
            the client supports the new `(TextDocumentRegistrationOptions & StaticRegistrationOptions)`
            return value for the corresponding server capability as well.
          title: dynamicRegistration
          type: boolean
        formats:
          description: The token formats the clients supports.
          items:
            enum:
            - relative
            type: string
          title: formats
          type: array
        multilineTokenSupport:
          description: Whether the client supports tokens that can span multiple lines.
          title: multilineTokenSupport
          type: boolean
        overlappingTokenSupport:
          description: Whether the client supports tokens that can overlap each other.
          title: overlappingTokenSupport
          type: boolean
        requests:
          title: requests
          typeof: function
        serverCancelSupport:
          description: |-
            Whether the client allows the server to actively cancel a
            semantic token request, e.g. supports returning
            LSPErrorCodes.ServerCancelled. If a server does the client
            needs to retrigger the request.
          title: serverCancelSupport
          type: boolean
        tokenModifiers:
          description: The token modifiers that the client supports.
          items:
            type: string
          title: tokenModifiers
          type: array
        tokenTypes:
          description: The token types that the client supports.
          items:
            type: string
          title: tokenTypes
          type: array
      x-propertyOrder:
      - dynamicRegistration
      - requests
      - tokenTypes
      - tokenModifiers
      - formats
      - overlappingTokenSupport
      - multilineTokenSupport
      - serverCancelSupport
      - augmentsSyntaxTokens
      required:
      - formats
      - requests
      - tokenModifiers
      - tokenTypes
      title: SemanticTokensClientCapabilities
      type: object
    SemanticTokensWorkspaceClientCapabilities:
      defaultProperties: []
      properties:
        refreshSupport:
          description: |-
            Whether the client implementation supports a refresh request sent from
            the server to the client.

            Note that this event is global and will force the client to refresh all
            semantic tokens currently shown. It should be used with absolute care
            and is useful for situation where a server for example detects a project
            wide change that requires such a calculation.
          title: refreshSupport
          type: boolean
      x-propertyOrder:
      - refreshSupport
      title: SemanticTokensWorkspaceClientCapabilities
      type: object
    ShowDocumentClientCapabilities:
      defaultProperties: []
      description: Client capabilities for the show document request.
      properties:
        support:
          description: |-
            The client has support for the show document
            request.
          title: support
          type: boolean
      x-propertyOrder:
      - support
      required:
      - support
      title: ShowDocumentClientCapabilities
      type: object
    ShowMessageRequestClientCapabilities:
      defaultProperties: []
      description: Show message request client capabilities
      properties:
        messageActionItem:
          title: messageActionItem
          typeof: function
      x-propertyOrder:
      - messageActionItem
      title: ShowMessageRequestClientCapabilities
      type: object
    SignatureHelpClientCapabilities:
      defaultProperties: []
      description: Client Capabilities for a [SignatureHelpRequest](#SignatureHelpRequest).
      properties:
        contextSupport:
          description: |-
            The client supports to send additional context information for a
            `textDocument/signatureHelp` request. A client that opts into
            contextSupport will also support the `retriggerCharacters` on
            `SignatureHelpOptions`.
          title: contextSupport
          type: boolean
        dynamicRegistration:
          description: Whether signature help supports dynamic registration.
          title: dynamicRegistration
          type: boolean
        signatureInformation:
          title: signatureInformation
          typeof: function
      x-propertyOrder:
      - dynamicRegistration
      - signatureInformation
      - contextSupport
      title: SignatureHelpClientCapabilities
      type: object
    TextDocumentClientCapabilities:
      defaultProperties: []
      description: Text document specific client capabilities.
      properties:
        callHierarchy:
          $ref: '#/components/schemas/CallHierarchyClientCapabilities'
          description: Capabilities specific to the various call hierarchy request.
          title: callHierarchy
        codeAction:
          $ref: '#/components/schemas/CodeActionClientCapabilities'
          description: Capabilities specific to the `textDocument/codeAction`
          title: codeAction
        codeLens:
          $ref: '#/components/schemas/CodeLensClientCapabilities'
          description: Capabilities specific to the `textDocument/codeLens`
          title: codeLens
        colorProvider:
          $ref: '#/components/schemas/DocumentColorClientCapabilities'
          description: Capabilities specific to the `textDocument/documentColor`
          title: colorProvider
        completion:
          $ref: '#/components/schemas/CompletionClientCapabilities'
          description: Capabilities specific to the `textDocument/completion`
          title: completion
        declaration:
          $ref: '#/components/schemas/DeclarationClientCapabilities'
          description: Capabilities specific to the `textDocument/declaration`
          title: declaration
        definition:
          $ref: '#/components/schemas/DefinitionClientCapabilities'
          description: Capabilities specific to the `textDocument/definition`
          title: definition
        diagnostic:
          title: diagnostic
          typeof: function
        documentHighlight:
          $ref: '#/components/schemas/DocumentHighlightClientCapabilities'
          description: Capabilities specific to the `textDocument/documentHighlight`
          title: documentHighlight
        documentLink:
          $ref: '#/components/schemas/DocumentLinkClientCapabilities'
          description: Capabilities specific to the `textDocument/documentLink`
          title: documentLink
        documentSymbol:
          $ref: '#/components/schemas/DocumentSymbolClientCapabilities'
          description: Capabilities specific to the `textDocument/documentSymbol`
          title: documentSymbol
        foldingRange:
          $ref: '#/components/schemas/FoldingRangeClientCapabilities'
          description: Capabilities specific to `textDocument/foldingRange` request.
          title: foldingRange
        formatting:
          $ref: '#/components/schemas/DocumentFormattingClientCapabilities'
          description: Capabilities specific to the `textDocument/formatting`
          title: formatting
        hover:
          $ref: '#/components/schemas/HoverClientCapabilities'
          description: Capabilities specific to the `textDocument/hover`
          title: hover
        implementation:
          $ref: '#/components/schemas/ImplementationClientCapabilities'
          description: Capabilities specific to the `textDocument/implementation`
          title: implementation
        inlayHint:
          title: inlayHint
          typeof: function
        inlineValue:
          title: inlineValue
          typeof: function
        linkedEditingRange:
          $ref: '#/components/schemas/LinkedEditingRangeClientCapabilities'
          description: Capabilities specific to the linked editing range request.
          title: linkedEditingRange
        moniker:
          $ref: '#/components/schemas/MonikerClientCapabilities'
          description: Client capabilities specific to the moniker request.
          title: moniker
        onTypeFormatting:
          $ref: '#/components/schemas/DocumentOnTypeFormattingClientCapabilities'
          description: Capabilities specific to the `textDocument/onTypeFormatting`
          title: onTypeFormatting
        publishDiagnostics:
          $ref: '#/components/schemas/PublishDiagnosticsClientCapabilities'
          description: Capabilities specific to `textDocument/publishDiagnostics` notification.
          title: publishDiagnostics
        rangeFormatting:
          $ref: '#/components/schemas/DocumentRangeFormattingClientCapabilities'
          description: Capabilities specific to the `textDocument/rangeFormatting`
          title: rangeFormatting
        references:
          $ref: '#/components/schemas/ReferenceClientCapabilities'
          description: Capabilities specific to the `textDocument/references`
          title: references
        rename:
          $ref: '#/components/schemas/RenameClientCapabilities'
          description: Capabilities specific to the `textDocument/rename`
          title: rename
        selectionRange:
          $ref: '#/components/schemas/SelectionRangeClientCapabilities'
          description: Capabilities specific to `textDocument/selectionRange` request.
          title: selectionRange
        semanticTokens:
          $ref: '#/components/schemas/SemanticTokensClientCapabilities'
          description: Capabilities specific to the various semantic token request.
          title: semanticTokens
        signatureHelp:
          $ref: '#/components/schemas/SignatureHelpClientCapabilities'
          description: Capabilities specific to the `textDocument/signatureHelp`
          title: signatureHelp
        synchronization:
          $ref: '#/components/schemas/TextDocumentSyncClientCapabilities'
          description: Defines which synchronization capabilities the client supports.
          title: synchronization
        typeDefinition:
          $ref: '#/components/schemas/TypeDefinitionClientCapabilities'
          description: Capabilities specific to the `textDocument/typeDefinition`
          title: typeDefinition
        typeHierarchy:
          title: typeHierarchy
          typeof: function
      x-propertyOrder:
      - synchronization
      - completion
      - hover
      - signatureHelp
      - declaration
      - definition
      - typeDefinition
      - implementation
      - references
      - documentHighlight
      - documentSymbol
      - codeAction
      - codeLens
      - documentLink
      - colorProvider
      - formatting
      - rangeFormatting
      - onTypeFormatting
      - rename
      - foldingRange
      - selectionRange
      - publishDiagnostics
      - callHierarchy
      - semanticTokens
      - linkedEditingRange
      - moniker
      - typeHierarchy
      - inlineValue
      - inlayHint
      - diagnostic
      title: TextDocumentClientCapabilities
      type: object
    TextDocumentSyncClientCapabilities:
      defaultProperties: []
      properties:
        didSave:
          description: The client supports did save notifications.
          title: didSave
          type: boolean
        dynamicRegistration:
          description: Whether text document synchronization supports dynamic registration.
          title: dynamicRegistration
          type: boolean
        willSave:
          description: The client supports sending will save notifications.
          title: willSave
          type: boolean
        willSaveWaitUntil:
          description: |-
            The client supports sending a will save request and
            waits for a response providing text edits which will
            be applied to the document before it is saved.
          title: willSaveWaitUntil
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      - willSave
      - willSaveWaitUntil
      - didSave
      title: TextDocumentSyncClientCapabilities
      type: object
    TypeDefinitionClientCapabilities:
      defaultProperties: []
      description: Since 3.6.0
      properties:
        dynamicRegistration:
          description: |-
            Whether implementation supports dynamic registration. If this is set to `true`
            the client supports the new `TypeDefinitionRegistrationOptions` return value
            for the corresponding server capability as well.
          title: dynamicRegistration
          type: boolean
        linkSupport:
          description: |-
            The client supports additional metadata in the form of definition links.

            Since 3.14.0
          title: linkSupport
          type: boolean
      x-propertyOrder:
      - dynamicRegistration
      - linkSupport
      title: TypeDefinitionClientCapabilities
      type: object
    WindowClientCapabilities:
      defaultProperties: []
      properties:
        showDocument:
          $ref: '#/components/schemas/ShowDocumentClientCapabilities'
          description: Capabilities specific to the showDocument request.
          title: showDocument
        showMessage:
          $ref: '#/components/schemas/ShowMessageRequestClientCapabilities'
          description: Capabilities specific to the showMessage request.
          title: showMessage
        workDoneProgress:
          description: |-
            It indicates whether the client supports server initiated
            progress using the `window/workDoneProgress/create` request.

            The capability also controls Whether client supports handling
            of progress notifications. If set servers are allowed to report a
            `workDoneProgress` property in the request specific server
            capabilities.
          title: workDoneProgress
          type: boolean
      x-propertyOrder:
      - workDoneProgress
      - showMessage
      - showDocument
      title: WindowClientCapabilities
      type: object
    WorkspaceClientCapabilities:
      defaultProperties: []
      description: Workspace specific client capabilities.
      properties:
        applyEdit:
          description: |-
            The client supports applying batch edits
            to the workspace by supporting the request
            'workspace/applyEdit'
          title: applyEdit
          type: boolean
        codeLens:
          $ref: '#/components/schemas/CodeLensWorkspaceClientCapabilities'
          description: |-
            Capabilities specific to the code lens requests scoped to the
            workspace.
          title: codeLens
        configuration:
          description: The client supports `workspace/configuration` requests.
          title: configuration
          type: boolean
        diagnostics:
          title: diagnostics
          typeof: function
        didChangeConfiguration:
          $ref: '#/components/schemas/DidChangeConfigurationClientCapabilities'
          description: Capabilities specific to the `workspace/didChangeConfiguration`
            notification.
          title: didChangeConfiguration
        didChangeWatchedFiles:
          $ref: '#/components/schemas/DidChangeWatchedFilesClientCapabilities'
          description: Capabilities specific to the `workspace/didChangeWatchedFiles`
            notification.
          title: didChangeWatchedFiles
        executeCommand:
          $ref: '#/components/schemas/ExecuteCommandClientCapabilities'
          description: Capabilities specific to the `workspace/executeCommand` request.
          title: executeCommand
        fileOperations:
          $ref: '#/components/schemas/FileOperationClientCapabilities'
          description: |-
            The client has support for file notifications/requests for user operations on files.

            Since 3.16.0
          title: fileOperations
        inlayHint:
          title: inlayHint
          typeof: function
        inlineValue:
          title: inlineValue
          typeof: function
        semanticTokens:
          $ref: '#/components/schemas/SemanticTokensWorkspaceClientCapabilities'
          description: |-
            Capabilities specific to the semantic token requests scoped to the
            workspace.
          title: semanticTokens
        symbol:
          $ref: '#/components/schemas/WorkspaceSymbolClientCapabilities'
          description: Capabilities specific to the `workspace/symbol` request.
          title: symbol
        workspaceEdit:
          $ref: '#/components/schemas/WorkspaceEditClientCapabilities'
          description: Capabilities specific to `WorkspaceEdit`s
          title: workspaceEdit
        workspaceFolders:
          description: The client has support for workspace folders
          title: workspaceFolders
          type: boolean
      x-propertyOrder:
      - applyEdit
      - workspaceEdit
      - didChangeConfiguration
      - didChangeWatchedFiles
      - symbol
      - executeCommand
      - workspaceFolders
      - configuration
      - semanticTokens
      - codeLens
      - fileOperations
      - inlineValue
      - inlayHint
      - diagnostics
      title: WorkspaceClientCapabilities
      type: object
    WorkspaceEditClientCapabilities:
      defaultProperties: []
      properties:
        changeAnnotationSupport:
          title: changeAnnotationSupport
          typeof: function
        documentChanges:
          description: The client supports versioned document changes in `WorkspaceEdit`s
          title: documentChanges
          type: boolean
        failureHandling:
          $ref: '#/components/schemas/FailureHandlingKind'
          description: |-
            The failure handling strategy of a client if applying the workspace edit
            fails.
          title: failureHandling
        normalizesLineEndings:
          description: |-
            Whether the client normalizes line endings to the client specific
            setting.
            If set to `true` the client will normalize line ending characters
            in a workspace edit containing to the client specific new line
            character.
          title: normalizesLineEndings
          type: boolean
        resourceOperations:
          description: |-
            The resource operations the client supports. Clients should at least
            support 'create', 'rename' and 'delete' files and folders.
          items:
            description: The kind of resource operations supported by the client.
            enum:
            - create
            - delete
            - rename
            type: string
          title: resourceOperations
          type: array
      x-propertyOrder:
      - documentChanges
      - resourceOperations
      - failureHandling
      - normalizesLineEndings
      - changeAnnotationSupport
      title: WorkspaceEditClientCapabilities
      type: object
    WorkspaceSymbolClientCapabilities:
      defaultProperties: []
      description: Client capabilities for a [WorkspaceSymbolRequest](#WorkspaceSymbolRequest).
      properties:
        dynamicRegistration:
          description: Symbol request supports dynamic registration.
          title: dynamicRegistration
          type: boolean
        resolveSupport:
          title: resolveSupport
          typeof: function
        symbolKind:
          title: symbolKind
          typeof: function
        tagSupport:
          title: tagSupport
          typeof: function
      x-propertyOrder:
      - dynamicRegistration
      - symbolKind
      - tagSupport
      - resolveSupport
      title: WorkspaceSymbolClientCapabilities
      type: object
    uinteger:
      description: Defines an unsigned integer in the range of 0 to 2^31 - 1.
      title: uinteger
      type: integer
